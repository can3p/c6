// Code generated by "stringer -type=TokenType token.go"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[T_SPACE-0]
	_ = x[T_COMMENT_LINE-1]
	_ = x[T_COMMENT_BLOCK-2]
	_ = x[T_SEMICOLON-3]
	_ = x[T_COMMA-4]
	_ = x[T_IDENT-5]
	_ = x[T_URL-6]
	_ = x[T_MEDIA-7]
	_ = x[T_PAGE-8]
	_ = x[T_TRUE-9]
	_ = x[T_FALSE-10]
	_ = x[T_NULL-11]
	_ = x[T_ONLY-12]
	_ = x[T_ODD-13]
	_ = x[T_EVEN-14]
	_ = x[T_N-15]
	_ = x[T_MS_PARAM_NAME-16]
	_ = x[T_FUNCTION_NAME-17]
	_ = x[T_ID_SELECTOR-18]
	_ = x[T_CLASS_SELECTOR-19]
	_ = x[T_TYPE_SELECTOR-20]
	_ = x[T_UNIVERSAL_SELECTOR-21]
	_ = x[T_PARENT_SELECTOR-22]
	_ = x[T_PSEUDO_SELECTOR-23]
	_ = x[T_FUNCTIONAL_PSEUDO-24]
	_ = x[T_INTERPOLATION_SELECTOR-25]
	_ = x[T_LITERAL_CONCAT-26]
	_ = x[T_CONCAT-27]
	_ = x[T_MS_PROGID-28]
	_ = x[T_DESCENDANT_COMBINATOR-29]
	_ = x[T_CHILD_COMBINATOR-30]
	_ = x[T_ADJACENT_SIBLING_COMBINATOR-31]
	_ = x[T_GENERAL_SIBLING_COMBINATOR-32]
	_ = x[T_UNICODE_RANGE-33]
	_ = x[T_IF-34]
	_ = x[T_ELSE-35]
	_ = x[T_ELSE_IF-36]
	_ = x[T_INCLUDE-37]
	_ = x[T_EACH-38]
	_ = x[T_WHEN-39]
	_ = x[T_MIXIN-40]
	_ = x[T_EXTEND-41]
	_ = x[T_FUNCTION-42]
	_ = x[T_AT_ROOT-43]
	_ = x[T_WARN-44]
	_ = x[T_ERROR-45]
	_ = x[T_DEBUG-46]
	_ = x[T_FOR-47]
	_ = x[T_FOR_FROM-48]
	_ = x[T_FOR_THROUGH-49]
	_ = x[T_FOR_TO-50]
	_ = x[T_FOR_IN-51]
	_ = x[T_WHILE-52]
	_ = x[T_RETURN-53]
	_ = x[T_RANGE-54]
	_ = x[T_CONTENT-55]
	_ = x[T_FLAG_GLOBAL-56]
	_ = x[T_FLAG_DEFAULT-57]
	_ = x[T_FLAG_IMPORTANT-58]
	_ = x[T_FLAG_OPTIONAL-59]
	_ = x[T_FONT_FACE-60]
	_ = x[T_NAMESPACE-61]
	_ = x[T_LOGICAL_NOT-62]
	_ = x[T_LOGICAL_OR-63]
	_ = x[T_LOGICAL_AND-64]
	_ = x[T_LOGICAL_XOR-65]
	_ = x[T_NOP-66]
	_ = x[T_PLUS-67]
	_ = x[T_DIV-68]
	_ = x[T_MUL-69]
	_ = x[T_MINUS-70]
	_ = x[T_MOD-71]
	_ = x[T_BRACE_OPEN-72]
	_ = x[T_BRACE_CLOSE-73]
	_ = x[T_LANG_CODE-74]
	_ = x[T_BRACKET_OPEN-75]
	_ = x[T_ATTRIBUTE_NAME-76]
	_ = x[T_BRACKET_CLOSE-77]
	_ = x[T_EQUAL-78]
	_ = x[T_UNEQUAL-79]
	_ = x[T_GT-80]
	_ = x[T_LT-81]
	_ = x[T_GE-82]
	_ = x[T_LE-83]
	_ = x[T_ASSIGN-84]
	_ = x[T_ATTR_EQUAL-85]
	_ = x[T_INCLUDE_MATCH-86]
	_ = x[T_PREFIX_MATCH-87]
	_ = x[T_DASH_MATCH-88]
	_ = x[T_SUFFIX_MATCH-89]
	_ = x[T_SUBSTRING_MATCH-90]
	_ = x[T_VARIABLE-91]
	_ = x[T_VARIABLE_LENGTH_ARGUMENTS-92]
	_ = x[T_IMPORT-93]
	_ = x[T_USE-94]
	_ = x[T_AT_RULE-95]
	_ = x[T_CHARSET-96]
	_ = x[T_QQ_STRING-97]
	_ = x[T_Q_STRING-98]
	_ = x[T_UNQUOTE_STRING-99]
	_ = x[T_PAREN_OPEN-100]
	_ = x[T_PAREN_CLOSE-101]
	_ = x[T_FLAG_CONSTANT-102]
	_ = x[T_INTEGER-103]
	_ = x[T_FLOAT-104]
	_ = x[T_CDOPEN-105]
	_ = x[T_CDCLOSE-106]
	_ = x[T_UNIT_NONE-107]
	_ = x[T_UNIT_OTHERS-108]
	_ = x[T_UNIT_PERCENT-109]
	_ = x[T_UNIT_SECOND-110]
	_ = x[T_UNIT_MILLISECOND-111]
	_ = x[T_UNIT_EM-112]
	_ = x[T_UNIT_EX-113]
	_ = x[T_UNIT_CH-114]
	_ = x[T_UNIT_REM-115]
	_ = x[T_UNIT_CM-116]
	_ = x[T_UNIT_IN-117]
	_ = x[T_UNIT_MM-118]
	_ = x[T_UNIT_PC-119]
	_ = x[T_UNIT_PT-120]
	_ = x[T_UNIT_PX-121]
	_ = x[T_UNIT_VH-122]
	_ = x[T_UNIT_VW-123]
	_ = x[T_UNIT_VMIN-124]
	_ = x[T_UNIT_VMAX-125]
	_ = x[T_UNIT_HZ-126]
	_ = x[T_UNIT_KHZ-127]
	_ = x[T_UNIT_DPI-128]
	_ = x[T_UNIT_DPCM-129]
	_ = x[T_UNIT_DPPX-130]
	_ = x[T_UNIT_DEG-131]
	_ = x[T_UNIT_GRAD-132]
	_ = x[T_UNIT_RAD-133]
	_ = x[T_UNIT_TURN-134]
	_ = x[T_PROPERTY_NAME_TOKEN-135]
	_ = x[T_PROPERTY_VALUE-136]
	_ = x[T_HEX_COLOR-137]
	_ = x[T_COLON-138]
	_ = x[T_INTERPOLATION_START-139]
	_ = x[T_INTERPOLATION_INNER-140]
	_ = x[T_INTERPOLATION_END-141]
}

const _TokenType_name = "T_SPACET_COMMENT_LINET_COMMENT_BLOCKT_SEMICOLONT_COMMAT_IDENTT_URLT_MEDIAT_PAGET_TRUET_FALSET_NULLT_ONLYT_ODDT_EVENT_NT_MS_PARAM_NAMET_FUNCTION_NAMET_ID_SELECTORT_CLASS_SELECTORT_TYPE_SELECTORT_UNIVERSAL_SELECTORT_PARENT_SELECTORT_PSEUDO_SELECTORT_FUNCTIONAL_PSEUDOT_INTERPOLATION_SELECTORT_LITERAL_CONCATT_CONCATT_MS_PROGIDT_DESCENDANT_COMBINATORT_CHILD_COMBINATORT_ADJACENT_SIBLING_COMBINATORT_GENERAL_SIBLING_COMBINATORT_UNICODE_RANGET_IFT_ELSET_ELSE_IFT_INCLUDET_EACHT_WHENT_MIXINT_EXTENDT_FUNCTIONT_AT_ROOTT_WARNT_ERRORT_DEBUGT_FORT_FOR_FROMT_FOR_THROUGHT_FOR_TOT_FOR_INT_WHILET_RETURNT_RANGET_CONTENTT_FLAG_GLOBALT_FLAG_DEFAULTT_FLAG_IMPORTANTT_FLAG_OPTIONALT_FONT_FACET_NAMESPACET_LOGICAL_NOTT_LOGICAL_ORT_LOGICAL_ANDT_LOGICAL_XORT_NOPT_PLUST_DIVT_MULT_MINUST_MODT_BRACE_OPENT_BRACE_CLOSET_LANG_CODET_BRACKET_OPENT_ATTRIBUTE_NAMET_BRACKET_CLOSET_EQUALT_UNEQUALT_GTT_LTT_GET_LET_ASSIGNT_ATTR_EQUALT_INCLUDE_MATCHT_PREFIX_MATCHT_DASH_MATCHT_SUFFIX_MATCHT_SUBSTRING_MATCHT_VARIABLET_VARIABLE_LENGTH_ARGUMENTST_IMPORTT_USET_AT_RULET_CHARSETT_QQ_STRINGT_Q_STRINGT_UNQUOTE_STRINGT_PAREN_OPENT_PAREN_CLOSET_FLAG_CONSTANTT_INTEGERT_FLOATT_CDOPENT_CDCLOSET_UNIT_NONET_UNIT_OTHERST_UNIT_PERCENTT_UNIT_SECONDT_UNIT_MILLISECONDT_UNIT_EMT_UNIT_EXT_UNIT_CHT_UNIT_REMT_UNIT_CMT_UNIT_INT_UNIT_MMT_UNIT_PCT_UNIT_PTT_UNIT_PXT_UNIT_VHT_UNIT_VWT_UNIT_VMINT_UNIT_VMAXT_UNIT_HZT_UNIT_KHZT_UNIT_DPIT_UNIT_DPCMT_UNIT_DPPXT_UNIT_DEGT_UNIT_GRADT_UNIT_RADT_UNIT_TURNT_PROPERTY_NAME_TOKENT_PROPERTY_VALUET_HEX_COLORT_COLONT_INTERPOLATION_STARTT_INTERPOLATION_INNERT_INTERPOLATION_END"

var _TokenType_index = [...]uint16{0, 7, 21, 36, 47, 54, 61, 66, 73, 79, 85, 92, 98, 104, 109, 115, 118, 133, 148, 161, 177, 192, 212, 229, 246, 265, 289, 305, 313, 324, 347, 365, 394, 422, 437, 441, 447, 456, 465, 471, 477, 484, 492, 502, 511, 517, 524, 531, 536, 546, 559, 567, 575, 582, 590, 597, 606, 619, 633, 649, 664, 675, 686, 699, 711, 724, 737, 742, 748, 753, 758, 765, 770, 782, 795, 806, 820, 836, 851, 858, 867, 871, 875, 879, 883, 891, 903, 918, 932, 944, 958, 975, 985, 1012, 1020, 1025, 1034, 1043, 1054, 1064, 1080, 1092, 1105, 1120, 1129, 1136, 1144, 1153, 1164, 1177, 1191, 1204, 1222, 1231, 1240, 1249, 1259, 1268, 1277, 1286, 1295, 1304, 1313, 1322, 1331, 1342, 1353, 1362, 1372, 1382, 1393, 1404, 1414, 1425, 1435, 1446, 1467, 1483, 1494, 1501, 1522, 1543, 1562}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
